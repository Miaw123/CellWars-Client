{"version":3,"sources":["src/js/components/Modules/Reader.js","src/js/components/TextCache.js","src/js/components/Entities/Cell.js","src/js/components/Entities/World.js","src/js/components/Receiver.js","src/js/components/Socket.js","src/js/components/Modules/Writer.js","src/js/components/Emitter.js","src/js/components/Entities/Player.js","src/js/components/Entities/Camera.js","src/js/components/Renderer.js","src/js/components/Hotkeys.js","src/js/components/Auth.js","src/js/components/Entities/Mouse.js","src/js/components/Engine.js","src/js/components/entities/Cell.js","src/js/components/entities/World.js","src/js/components/entities/Player.js","src/js/main.js"],"names":["Reader","buffer","_offset","_buffer","Buffer","from","value","this","readUInt8","readInt8","readUInt16LE","readInt16LE","readUInt32LE","readInt32LE","readFloatLE","readDoubleLE","length","slice","Math","max","toString","safeLength","terminatorLength","i","readStringUtf8","readStringUnicode","TextCache","size","color","stroke","strokeColor","canvas","ctx","dirty","scale","slowDown","isNaN","abs","document","createElement","getContext","fontsize","font","h","width","measureText","height","globalAlpha","lineWidth","strokeStyle","fillStyle","strokeText","fillText","Cell","id","x","y","r","name","type","position","animated","nameCache","sizeCache","setNameCache","getNameSize","setValue","setSize","World","cells","food","border","top","bottom","left","right","cell","newCell","Player","cellIds","indexOf","isSpawned","sortCells","Receiver","packets","100","_this","handshake","init","success","_this2","reset","playerCellId","leaderboard","readDouble","readUInt32","addCellId","row","readStringZeroUtf8","html","isAlive","eatenCells","removeCells","addCells","updateCells","readUInt16","hunterId","removeCell","readInt16","addCell","updateCell","Socket","ip","connected","disconnect","ws","WebSocket","binaryType","onopen","onOpen","onclose","onClose","onmessage","msg","onMessage","onerror","onError","close","data","send","handle","warn","error","Writer","poolSize","allocUnsafe","_length","checkAlloc","writeFloatLE","writeDoubleLE","copy","byteLength","write","writeStringUtf8","writeUInt8","writeStringUnicode","writeUInt16","concat","needed","chunk","chunkCount","Emitter","server","connect","emit","toBuffer","spawn","info","splitCell","ejectMass","move","writeInt16","eject","split","spectate","score","isMoving","on","$","val","create","nickname","hide","cellId","push","Camera","v","zoomFactor","e","zoom","animate","Renderer","translate","originalEvent","wheelDelta","center","total","forEach","toggle","pi2","PI","borderColor","foodColor","virusColor","virusStroke","fps","Date","resize","onresize","refresh","draw","restore","calcFps","save","clearRect","grid","window","innerWidth","innerHeight","strokeRect","x1","y1","x2","y2","loc","j","textAlign","textBaseline","beginPath","moveTo","lineTo","closePath","arc","fill","cellY","nameRatio","ceil","setScale","render","nameWidth","nameHeight","drawImage","sizeRatio","sizeWidth","sizeHeight","_this3","previous","next","factor","current","now","lastUpdate","text","filter","Hotkeys","pressed","keydown","keyup","target","is","keyCode","keycode","multiSplit","freeze","doubleSplit","overlay","Auth","ajaxSetup","cache","getScript","appId","version","removeAttr","localStorage","token","decoded","jwtDecode","exp","animateCss","show","user_name","user","JSON","parse","username","user_id","email","fbLogin","logout","post","done","stringify","login","response","authResponse","accessToken","access_token","emailValid","alert","setItem","focus","scope","auth_type","Mouse","coords","relative","clientX","clientY","Engine","mouseLoop","gameLoop","run","fn","extend","animationName","addClass","one","removeClass","css","bootbox","setDefaults","flush","rgb","darken","start"],"mappings":"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","file":"main.js","sourcesContent":["export default class Reader {\r\n    static init(buffer) {\r\n        this._offset = 0;\r\n        this._buffer = Buffer.from(buffer);\r\n    }\r\n\r\n    static readUInt8() {\r\n        let value = this._buffer.readUInt8(this._offset);\r\n        this._offset += 1;\r\n        return value;\r\n    }\r\n\r\n    static readInt8() {\r\n        let value = this._buffer.readInt8(this._offset);\r\n        this._offset += 1;\r\n        return value;\r\n    }\r\n\r\n    static readUInt16() {\r\n        let value = this._buffer.readUInt16LE(this._offset);\r\n        this._offset += 2;\r\n        return value;\r\n    }\r\n\r\n    static readInt16() {\r\n        let value = this._buffer.readInt16LE(this._offset);\r\n        this._offset += 2;\r\n        return value;\r\n    }\r\n\r\n    static readUInt32() {\r\n        let value = this._buffer.readUInt32LE(this._offset);\r\n        this._offset += 4;\r\n        return value;\r\n    }\r\n\r\n    static readInt32() {\r\n        let value = this._buffer.readInt32LE(this._offset);\r\n        this._offset += 4;\r\n        return value;\r\n    }\r\n\r\n    static readFloat() {\r\n        let value = this._buffer.readFloatLE(this._offset);\r\n        this._offset += 4;\r\n        return value;\r\n    }\r\n\r\n    static readDouble() {\r\n        let value = this._buffer.readDoubleLE(this._offset);\r\n        this._offset += 8;\r\n        return value;\r\n    }\r\n\r\n    static readBytes(length) {\r\n        return this._buffer.slice(this._offset, this._offset + length);\r\n    }\r\n\r\n    static skipBytes(length) {\r\n        this._offset += length;\r\n    }\r\n\r\n    static readStringUtf8(length) {\r\n        if (length == null) length = this._buffer.length - this._offset;\r\n        length = Math.max(0, length);\r\n        let value = this._buffer.toString('utf8', this._offset, this._offset + length);\r\n        this._offset += length;\r\n        return value;\r\n    }\r\n\r\n    static readStringUnicode(length) {\r\n        if (length == null) length = this._buffer.length - this._offset;\r\n        length = Math.max(0, length);\r\n        let safeLength = length - (length % 2);\r\n        safeLength = Math.max(0, safeLength);\r\n        let value = this._buffer.toString('ucs2', this._offset, this._offset + safeLength);\r\n        this._offset += length;\r\n        return value;\r\n    }\r\n\r\n    static readStringZeroUtf8() {\r\n        let length = 0;\r\n        let terminatorLength = 0;\r\n        for (let i = this._offset; i < this._buffer.length; i++) {\r\n            if (this._buffer.readUInt8(i) === 0) {\r\n                terminatorLength = 1;\r\n                break;\r\n            }\r\n            length++;\r\n        }\r\n        let value = this.readStringUtf8(length);\r\n        this._offset += terminatorLength;\r\n        return value;\r\n    }\r\n\r\n    static readStringZeroUnicode() {\r\n        let length = 0;\r\n        let terminatorLength = ((this._buffer.length - this._offset) & 1) !== 0 ? 1 : 0;\r\n        for (let i = this._offset; i + 1 < this._buffer.length; i += 2) {\r\n            if (this._buffer.readUInt16LE(i) === 0) {\r\n                terminatorLength = 2;\r\n                break;\r\n            }\r\n            length += 2;\r\n        }\r\n        let value = this.readStringUnicode(length);\r\n        this._offset += terminatorLength;\r\n        return value;\r\n    }\r\n}\r\n","export default class TextCache {\r\n    constructor(size, color, stroke, strokeColor) {\r\n        this.value = '';\r\n        this.color = color || '#000000';\r\n        this.stroke = stroke || false;\r\n        this.strokeColor = strokeColor || '#000000';\r\n        this.size = size || 16;\r\n        this.canvas = null;\r\n        this.ctx = null;\r\n        this.dirty = false;\r\n        this.scale = 1;\r\n    }\r\n\r\n    setSize(size) {\r\n        if (this.size !== size) {\r\n            this.size = size;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    setScale(scale) {\r\n        if (this.scale !== scale) {\r\n            this.scale = scale;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    setStrokeColor(strokeColor) {\r\n        if (this.strokeColor !== strokeColor) {\r\n            this.strokeColor = strokeColor;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    setValue(value) {\r\n        let slowDown;\r\n        if (!isNaN(value) && !isNaN(this.value) && this.value !== 0 && value !== 0 && this.value !== value) {\r\n            if (Math.abs((value - this.value) / this.value) < 0.012) {\r\n                slowDown = this.value;\r\n                this.value = value;\r\n            }\r\n        }\r\n\r\n        if (value !== this.value) {\r\n            this.value = value;\r\n            this.dirty = true;\r\n        }\r\n\r\n        if (slowDown) this.value = slowDown;\r\n    }\r\n\r\n    render() {\r\n        if (this.canvas == null) {\r\n            this.canvas = document.createElement('canvas');\r\n            this.ctx = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            const canvas = this.canvas;\r\n            const ctx = this.ctx;\r\n            const value = this.value;\r\n            const scale = this.scale;\r\n            const fontsize = this.size;\r\n            const font = `${fontsize}px Roboto Mono`;\r\n            ctx.font = font;\r\n            const h = ~~(0.2 * fontsize);\r\n            canvas.width = (ctx.measureText(value).width + 6) * scale;\r\n            canvas.height = (fontsize + h) * scale;\r\n            ctx.font = font;\r\n            ctx.scale(scale, scale);\r\n            ctx.globalAlpha = 1;\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = this.strokeColor;\r\n            ctx.fillStyle = this.color;\r\n\r\n            if (this.stroke) {\r\n                ctx.strokeText(value, 3, fontsize - h / 2);\r\n            }\r\n\r\n            ctx.fillText(value, 3, fontsize - h / 2);\r\n        }\r\n\r\n        return this.canvas;\r\n    }\r\n}\r\n","import TextCache from '../TextCache.js';\r\n\r\nexport default class Cell {\r\n    constructor(id, x, y, r, color, name, type) {\r\n        this.id = id;\r\n        this.position = {x: x, y: y, r: r};\r\n        this.animated = {x: x, y: y, r: r};\r\n        this.color = color;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.nameCache = null;\r\n        this.sizeCache = null;\r\n        this.setNameCache(name);\r\n    }\r\n\r\n    getNameSize() {\r\n        return Math.max(~~(0.3 * this.animated.r), 24);\r\n    }\r\n\r\n    setNameCache(name) {\r\n        if (this.nameCache === null) {\r\n            this.nameCache = new TextCache(this.getNameSize(), '#FFFFFF', true, '#000000');\r\n            this.nameCache.setValue(this.name);\r\n        } else {\r\n            this.nameCache.setSize(this.getNameSize());\r\n            this.nameCache.setValue(this.name);\r\n        }\r\n    }\r\n}\r\n","import Cell from './Cell.js';\r\nimport Player from './Player.js';\r\n\r\n// Container for our cell objects\r\nexport default class World {\r\n    // Creates a world object\r\n    static create() {\r\n        this.cells = [];\r\n        this.food = [];\r\n        this.border = {top: -7071, bottom: 7071, left: -7071, right: 7071};\r\n    }\r\n\r\n    // Add cell\r\n    static addCell(cell) {\r\n        let newCell = new Cell(cell.id, cell.x, cell.y, cell.r, cell.color, cell.name, cell.type);\r\n        if (cell.type !== 3) {\r\n            this.cells[cell.id] = newCell;\r\n        } else {\r\n            this.food[cell.id] = newCell;\r\n        }\r\n\r\n        if (cell.type === 1 && Player.cellIds.indexOf(cell.id) > -1) {\r\n            Player.cells[cell.id] = newCell;\r\n            Player.isSpawned = true;\r\n        }\r\n    }\r\n\r\n    // Remove cell\r\n    static removeCell(cell) {\r\n        if (cell.type !== 3) {\r\n            if (cell.id in this.cells) {\r\n                this.cells[cell.id] = null;\r\n                delete this.cells[cell.id];\r\n            }\r\n\r\n            if (cell.id in Player.cells) {\r\n                Player.cells[cell.id] = null;\r\n                delete Player.cells[cell.id];\r\n            }\r\n        } else {\r\n            this.food[cell.id] = null;\r\n            delete this.food[cell.id];\r\n        }\r\n    }\r\n\r\n    // Update cell\r\n    static updateCell(cell) {\r\n        if (cell.type !== 3) {\r\n            if (cell.id in this.cells) {\r\n                this.cells[cell.id].position.x = cell.x;\r\n                this.cells[cell.id].position.y = cell.y;\r\n\r\n                if (this.cells[cell.id].position.r !== cell.r) {\r\n                    this.cells[cell.id].position.r = cell.r;\r\n                    this.sortCells();\r\n                }\r\n            }\r\n        } else {\r\n            this.food[cell.id].position.x = cell.x;\r\n            this.food[cell.id].position.y = cell.y;\r\n        }\r\n    }\r\n\r\n    // Sort cells, virus, eject\r\n    static sortCells() {\r\n    }\r\n}\r\n","import Reader from './Modules/Reader.js';\r\nimport Player from './Entities/Player.js';\r\nimport World from './Entities/World.js';\r\nimport Renderer from './Renderer.js';\r\n\r\n// Handles incoming packets\r\nexport default class Receiver {\r\n    static handle(buffer) {\r\n        if (!this.packets) {\r\n            this.packets = {100: () => this.handshake()};\r\n        }\r\n\r\n        Reader.init(buffer);\r\n        let id = Reader.readUInt8();\r\n\r\n        if (id in this.packets) {\r\n            this.packets[id]();\r\n        }\r\n    }\r\n\r\n    static handshake() {\r\n        let handshake = Reader.readUInt8();\r\n\r\n        if (handshake === 57) {\r\n            Logger.success('Handshake received');\r\n            this.packets = {\r\n                110: () => this.reset(),\r\n                120: () => this.border(),\r\n                130: () => this.playerCellId(),\r\n                140: () => this.leaderboard(),\r\n                150: () => this.cells()\r\n                // 160: () => this.team()\r\n            };\r\n        }\r\n    }\r\n\r\n    static reset() {\r\n        World.cells = [];\r\n        World.food = [];\r\n        Player.cells = [];\r\n        Player.cellIds = [];\r\n\r\n        Logger.success(`Cells cleared`);\r\n    }\r\n\r\n    static border() {\r\n        let border = {\r\n            top: Reader.readDouble(),\r\n            bottom: Reader.readDouble(),\r\n            left: Reader.readDouble(),\r\n            right: Reader.readDouble()\r\n        };\r\n\r\n        World.border = border;\r\n        Logger.success(`Border received`);\r\n    }\r\n\r\n    static playerCellId() {\r\n        let playerCellId = Reader.readUInt32();\r\n        Player.addCellId(playerCellId);\r\n        Logger.success(`Player cell received`);\r\n    }\r\n\r\n    static leaderboard() {\r\n        let row = '';\r\n        let length = Reader.readUInt8();\r\n        for (let i = 0; i < length; i++) {\r\n            let name = Reader.readStringZeroUtf8();\r\n            let highlight = Reader.readUInt8();\r\n            let highlightClass = (highlight) ? 'lbHighlight' : '';\r\n            let rank = i + 1;\r\n            row += `<span class=\"${highlightClass}\">${rank}. ${name}</span>`;\r\n        }\r\n\r\n        Renderer.leaderboard.html(row);\r\n    }\r\n\r\n    static cells() {\r\n        if (Player.isAlive) {\r\n            this.eatenCells();\r\n            this.removeCells();\r\n            this.addCells();\r\n            this.updateCells();\r\n        }\r\n\t\t//Logger.success(`Cells received`);\r\n    }\r\n\r\n    static eatenCells() {\r\n        let cell = {};\r\n\r\n        let length = Reader.readUInt16();\r\n        while (length--) {\r\n            cell.type = Reader.readUInt8();\r\n            cell.id = Reader.readUInt32();\r\n            cell.hunterId = Reader.readUInt32();\r\n            World.removeCell(cell);\r\n        }\r\n    }\r\n\r\n    static removeCells() {\r\n        let cell = {};\r\n\r\n        let length = Reader.readUInt16();\r\n        while (length--) {\r\n            cell.type = Reader.readUInt8();\r\n            cell.id = Reader.readUInt32();\r\n            World.removeCell(cell);\r\n        }\r\n    }\r\n\r\n    static addCells() {\r\n        let cell = {};\r\n\r\n        let length = Reader.readUInt16();\r\n\t\tLogger.success(`Cellszz received ${length}`);\r\n        while (length--) {\r\n            cell.type = Reader.readUInt8();\r\n            cell.id = Reader.readUInt32();\r\n            cell.x = Reader.readInt16();\r\n            cell.y = Reader.readInt16();\r\n            cell.r = Reader.readUInt16();\r\n            cell.color = '';\r\n            cell.name = '';\r\n\r\n            if (cell.type === 1 || cell.type === 4) {\r\n                cell.color = `rgb(${Reader.readUInt8()}, ${Reader.readUInt8()}, ${Reader.readUInt8()})`;\r\n                if (cell.type === 1) {cell.name = Reader.readStringZeroUtf8();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n            World.addCell(cell);\r\n        }\r\n    }\r\n\r\n    static updateCells() {\r\n        let cell = {};\r\n\r\n        let length = Reader.readUInt16();\r\n        while (length--) {\r\n            cell.type = Reader.readUInt8();\r\n            cell.id = Reader.readUInt32();\r\n            cell.x = Reader.readInt16();\r\n            cell.y = Reader.readInt16();\r\n            cell.r = Reader.readUInt16();\r\n            World.updateCell(cell);\r\n        }\r\n    }\r\n}\r\n","import Receiver from './Receiver.js';\r\nimport Emitter from './Emitter.js';\r\n\r\n// Manages the connection\r\nexport default class Socket {\r\n    static connect(ip) {\r\n        if (this.connected) this.disconnect();\r\n\r\n        this.ws = new WebSocket('ws://' + ip);\r\n        this.ws.binaryType = 'arraybuffer';\r\n        this.ws.onopen = () => this.onOpen();\r\n        this.ws.onclose = () => this.onClose();\r\n        this.ws.onmessage = (msg) => this.onMessage(msg);\r\n        this.ws.onerror = () => this.onError();\r\n    }\r\n\r\n    static disconnect() {\r\n        this.ws.close();\r\n        this.ws = {};\r\n    }\r\n\r\n    static send(data) {\r\n        if (this.connected === true) this.ws.send(data);\r\n    }\r\n\r\n    static onOpen() {\r\n        this.connected = true;\r\n        Emitter.handshake();\r\n        Logger.success('Connection established');\r\n    }\r\n\r\n    static onMessage(msg) {\r\n        Receiver.handle(msg.data);\r\n    }\r\n\r\n    static onClose() {\r\n        this.connected = false;\r\n        Logger.warn('Connection closed');\r\n    }\r\n\r\n    static onError() {\r\n        this.connected = false;\r\n        Logger.error('Connection error');\r\n    }\r\n}\r\n","export default class Writer {\r\n    static init(size) {\r\n        if (!size || size <= 0) {\r\n            size = Buffer.poolSize / 2;\r\n        }\r\n        this._buffer = Buffer.allocUnsafe(size);\r\n        this._length = 0;\r\n    }\r\n\r\n    static writeUInt8(value) {\r\n        this.checkAlloc(1);\r\n        this._buffer[this._length++] = value;\r\n    }\r\n\r\n    static writeInt8(value) {\r\n        this.checkAlloc(1);\r\n        this._buffer[this._length++] = value;\r\n    }\r\n\r\n    static writeUInt16(value) {\r\n        this.checkAlloc(2);\r\n        this._buffer[this._length++] = value;\r\n        this._buffer[this._length++] = value >> 8;\r\n    }\r\n\r\n    static writeInt16(value) {\r\n        this.checkAlloc(2);\r\n        this._buffer[this._length++] = value;\r\n        this._buffer[this._length++] = value >> 8;\r\n    }\r\n\r\n    static writeUInt32(value) {\r\n        this.checkAlloc(4);\r\n        this._buffer[this._length++] = value;\r\n        this._buffer[this._length++] = value >> 8;\r\n        this._buffer[this._length++] = value >> 16;\r\n        this._buffer[this._length++] = value >> 24;\r\n    }\r\n\r\n    static writeInt32(value) {\r\n        this.checkAlloc(4);\r\n        this._buffer[this._length++] = value;\r\n        this._buffer[this._length++] = value >> 8;\r\n        this._buffer[this._length++] = value >> 16;\r\n        this._buffer[this._length++] = value >> 24;\r\n    }\r\n\r\n    static writeFloat(value) {\r\n        this.checkAlloc(4);\r\n        this._buffer.writeFloatLE(value, this._length, true);\r\n        this._length += 4;\r\n    }\r\n\r\n    static writeDouble(value) {\r\n        this.checkAlloc(8);\r\n        this._buffer.writeDoubleLE(value, this._length, true);\r\n        this._length += 8;\r\n    }\r\n\r\n    static writeBytes(data) {\r\n        this.checkAlloc(data.length);\r\n        data.copy(this._buffer, this._length, 0, data.length);\r\n        this._length += data.length;\r\n    }\r\n\r\n    static writeStringUtf8(value) {\r\n        let length = Buffer.byteLength(value, 'utf8');\r\n        this.checkAlloc(length);\r\n        this._buffer.write(value, this._length, 'utf8');\r\n        this._length += length;\r\n    }\r\n\r\n    static writeStringUnicode(value) {\r\n        let length = Buffer.byteLength(value, 'ucs2');\r\n        this.checkAlloc(length);\r\n        this._buffer.write(value, this._length, 'ucs2');\r\n        this._length += length;\r\n    }\r\n\r\n    static writeStringZeroUtf8(value) {\r\n        this.writeStringUtf8(value);\r\n        this.writeUInt8(0);\r\n    }\r\n\r\n    static writeStringZeroUnicode(value) {\r\n        this.writeStringUnicode(value);\r\n        this.writeUInt16(0);\r\n    }\r\n\r\n    static getLength() {\r\n        return this._length;\r\n    }\r\n\r\n    static reset() {\r\n        this._length = 0;\r\n    }\r\n\r\n    static toBuffer() {\r\n        return Buffer.concat([this._buffer.slice(0, this._length)]);\r\n    }\r\n\r\n    static checkAlloc(size) {\r\n        let needed = this._length + size;\r\n        if (this._buffer.length >= needed) { return; }\r\n        let chunk = Math.max(Buffer.poolSize / 2, 1024);\r\n        let chunkCount = (needed / chunk) >>> 0;\r\n        if ((needed % chunk) > 0) {\r\n            chunkCount += 1;\r\n        }\r\n        let buffer = Buffer.allocUnsafe(chunkCount * chunk);\r\n        this._buffer.copy(buffer, 0, 0, this._length);\r\n        this._buffer = buffer;\r\n    }\r\n}\r\n\r\n","import Socket from './Socket.js';\r\nimport Writer from './Modules/Writer.js';\r\n\r\n// Creates and sends packets to server\r\nexport default class Emitter {\r\n    static emit(buffer) {\r\n        Socket.send(buffer);\r\n    }\r\n\r\n    static connect(server) {\r\n        Socket.connect(server);\r\n\r\n        this.packets = {\r\n            handshake: 0,\r\n            spawn: 10,\r\n            splitCell: 20,\r\n            ejectMass: 30,\r\n            move: 40\r\n        };\r\n    }\r\n\r\n    static disconnect() {\r\n        Socket.disconnect();\r\n    }\r\n\r\n    static handshake() {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.handshake);\r\n        Writer.writeUInt8(57);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static spawn(name) {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.spawn);\r\n        Writer.writeStringUtf8(name);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static splitCell() {\r\n        Logger.info('Split cell');\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.splitCell);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static ejectMass() {\r\n        Logger.info('Eject');\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.ejectMass);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static move(x, y) {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.move);\r\n        Writer.writeInt16(~~x);\r\n        Writer.writeInt16(~~y);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static eject() {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.eject);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static split() {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.split);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n\r\n    static spectate() {\r\n        Writer.init();\r\n        Writer.writeUInt8(this.packets.spectate);\r\n        this.emit(Writer.toBuffer());\r\n    }\r\n}\r\n","import Emitter from '../Emitter.js';\r\nimport World from './World.js';\r\n\r\n// Represents one player\r\nexport default class Player {\r\n    // Creates a player object\r\n    static create() {\r\n        this.cells = [];\r\n        this.cellIds = [];\r\n        this.score = 0;\r\n        this.isAlive = false;\r\n        this.isSpawned = false;\r\n        this.isMoving = true;\r\n\r\n        // Listen on connect and play\r\n        $('#spawn').on('click', () => {\r\n            if (this.isAlive) return;\r\n            this.spawn($('#nickname').val());\r\n        });\r\n    }\r\n\r\n    // Connect this player\r\n    static connect(server) {\r\n        Emitter.connect(server);\r\n    }\r\n\r\n    // Flush cell data\r\n    static flush() {\r\n        this.create();\r\n        World.create();\r\n    }\r\n\r\n    // Disconnect from server\r\n    static disconnect() {\r\n        this.isAlive = false;\r\n        Emitter.disconnect();\r\n    }\r\n\r\n    // Spawn this player\r\n    static spawn(nickname) {\r\n        this.isAlive = true;\r\n        $('#overlay').hide();\r\n        Emitter.spawn(nickname);\r\n    }\r\n\r\n    // Split action\r\n    static splitCell() {\r\n        Emitter.splitCell();\r\n    }\r\n\r\n    // Eject mass\r\n    static ejectMass() {\r\n        Emitter.ejectMass();\r\n    }\r\n\r\n    // Add a new cell id to array\r\n    static addCellId(cellId) {\r\n        this.cellIds.push(cellId);\r\n    }\r\n}\r\n","import Player from './Player.js';\r\nimport Renderer from '../Renderer.js';\r\n\r\nexport default class Camera {\r\n    // Creates a camera object\r\n    static create() {\r\n        this.position = {x: 0, y: 0, v: 0.1};\r\n        this.animated = {x: 0, y: 0, v: 0.1};\r\n        this.zoomFactor = 0.9;\r\n\r\n        $('#canvas').on('wheel', (e) => this.zoom(e));\r\n    }\r\n\r\n    // Runs in game loop\r\n    static run() {\r\n        this.animate();\r\n        this.move();\r\n    }\r\n\r\n    static animate() {\r\n        this.animated.x = Renderer.animate(this.animated.x, this.position.x, 5);\r\n        this.animated.y = Renderer.animate(this.animated.y, this.position.y, 5);\r\n        this.animated.v = Renderer.animate(this.animated.v, this.position.v, 8);\r\n    }\r\n\r\n    // Scale camera (animated)\r\n    static scale() {\r\n        let x = ((Renderer.canvas.width / 2) / this.animated.v) - this.animated.x;\r\n        let y = ((Renderer.canvas.height / 2) / this.animated.v) - this.animated.y;\r\n\r\n        Renderer.ctx.scale(this.animated.v, this.animated.v);\r\n        Renderer.ctx.translate(~~x, ~~y);\r\n    }\r\n\r\n    // Calc zoom visibility\r\n    static zoom(e) {\r\n        if (e.originalEvent.wheelDelta < 0) {\r\n            this.position.v *= this.zoomFactor;\r\n        } else {\r\n            this.position.v /= this.zoomFactor;\r\n        }\r\n\r\n        if (this.position.v < 0.02) {\r\n            this.position.v = 0.02;\r\n        }\r\n\r\n        if (this.position.v > 4 / this.position.v) {\r\n            this.position.v = 4 / this.position.v;\r\n        }\r\n    }\r\n\r\n    // Move camera to center position\r\n    static move() {\r\n        let center = this.center();\r\n        this.position.x = center.x;\r\n        this.position.y = center.y;\r\n    }\r\n\r\n    // Calc camera center position\r\n    static center() {\r\n        let center = {x: 0, y: 0};\r\n        let total = {x: 0, y: 0};\r\n        let i = 0;\r\n\r\n        // Sum x and y of player cells\r\n        Player.cells.forEach((cell) => {\r\n            total.x = total.x + Player.cells[cell.id].position.x;\r\n            total.y = total.y + Player.cells[cell.id].position.y;\r\n            i++;\r\n        });\r\n\r\n        if (Player.isSpawned && i === 0) {\r\n            Player.isSpawned = false;\r\n            Player.isAlive = false;\r\n            $('#overlay').toggle();\r\n        }\r\n\r\n        // Return camera center\r\n        if (i > 0) {\r\n            center = {\r\n                x: total.x / i,\r\n                y: total.y / i\r\n            };\r\n        }\r\n\r\n        return center;\r\n    }\r\n}\r\n","import Camera from './Entities/Camera.js';\r\nimport World from './Entities/World.js';\r\nimport TextCache from './TextCache.js';\r\n\r\n// Draws stuff on the canvas\r\nexport default class Renderer {\r\n    // Create renderer object\r\n    static create() {\r\n        this.canvas = $('#canvas')[0];\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.pi2 = Math.PI * 2;\r\n\r\n        this.leaderboard = $('#lbPos');\r\n\r\n        this.borderColor = '#F44336';\r\n        this.foodColor = '#03A9F4';\r\n        this.virusColor = '#555';\r\n        this.virusStroke = '#24815d';\r\n\r\n        this.fps = {\r\n            now: 0,\r\n            filter: 50,\r\n            lastUpdate: (new Date) * 1,\r\n            value: 0,\r\n            display: 0\r\n        };\r\n\r\n        this.resize();\r\n        window.onresize = () => this.resize();\r\n    }\r\n\r\n    // Runs in game loop\r\n    static run() {\r\n        this.refresh();\r\n        this.draw();\r\n        this.restore();\r\n        this.calcFps();\r\n    }\r\n\r\n    // Refresh the screen and scale the camera\r\n    static refresh() {\r\n        this.ctx.save();\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        Camera.scale();\r\n    }\r\n\r\n    // Draw the things\r\n    static draw() {\r\n        this.grid();\r\n        this.border();\r\n        this.food();\r\n        this.cells();\r\n    }\r\n\r\n    // Restore context\r\n    static restore() {\r\n        this.ctx.restore();\r\n    }\r\n\r\n    // Resize the canvas\r\n    static resize() {\r\n        this.canvas.width = ~~window.innerWidth;\r\n        this.canvas.height = ~~window.innerHeight;\r\n    }\r\n\r\n    // Draw map border\r\n    static border() {\r\n        let ctx = this.ctx;\r\n        ctx.strokeStyle = this.borderColor;\r\n        ctx.lineWidth = 200;\r\n        ctx.strokeRect(World.border.left - 100, World.border.top - 100, 14342, 14342);\r\n    }\r\n\r\n    // Draw grid\r\n    static grid() {\r\n        let ctx = this.ctx;\r\n        let x1 = World.border.left,\r\n            y1 = World.border.top,\r\n            x2 = World.border.right,\r\n            y2 = World.border.bottom,\r\n            loc = ['A', 'B', 'C', 'D', 'E'],\r\n            i, j, x, y;\r\n\r\n        if (1) {\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.beginPath();\r\n            for (i = 0; i < 6; i++) {\r\n                x = x1 + (i * 2828);\r\n                y = y1 + (i * 2828);\r\n                ctx.moveTo(x, y1);\r\n                ctx.lineTo(x, y2);\r\n                ctx.moveTo(x1, y);\r\n                ctx.lineTo(x2, y);\r\n            };\r\n            ctx.closePath();\r\n\r\n            ctx.lineWidth = 150;\r\n            ctx.strokeStyle = '#161616';\r\n            ctx.stroke();\r\n\r\n            ctx.font = 1600 + 'px ' + 'ubuntu';\r\n            ctx.fillStyle = '#161616';\r\n\r\n            for (j = 0; j < 5; j++) {\r\n                for (i = 0; i < 5; i++) {\r\n                    x = x1 + ~~(2828 / 2) + (i * 2828);\r\n                    y = y1 + ~~(2828 / 2) + (j * 2828);\r\n                    ctx.fillText(loc[j] + (i + 1), x, y);\r\n                };\r\n            };\r\n        }\r\n    }\r\n\r\n    // Draw cells\r\n    static cells() {\r\n        let ctx = this.ctx;\r\n\r\n        World.cells.forEach((cell) => {\r\n            cell.animated.x = this.animate(cell.animated.x, cell.position.x, 6);\r\n            cell.animated.y = this.animate(cell.animated.y, cell.position.y, 6);\r\n            cell.animated.r = this.animate(cell.animated.r, cell.position.r, 7);\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(cell.animated.x, cell.animated.y, cell.animated.r, 0, this.pi2, false);\r\n            ctx.closePath();\r\n\r\n            if (cell.type === 2) { // virus\r\n                ctx.fillStyle = this.virusColor;\r\n                ctx.globalAlpha = 0.7;\r\n                ctx.fill();\r\n                ctx.globalAlpha = 1;\r\n                ctx.lineWidth = 10;\r\n                ctx.strokeStyle = this.virusStroke;\r\n                ctx.stroke();\r\n            }\r\n\r\n            if (cell.type === 4) { // eject\r\n                ctx.fillStyle = '#24815d';\r\n                ctx.fill();\r\n            }\r\n\r\n            if (cell.type === 1) { // cell\r\n                let cellY = ~~cell.animated.y;\r\n\r\n                ctx.lineWidth = 0;\r\n                ctx.fillStyle = cell.color;\r\n                ctx.fill();\r\n\r\n                // NAME CACHE\r\n                let nameCache = cell.nameCache;\r\n                nameCache.setValue(cell.name);\r\n                nameCache.setSize(cell.getNameSize() / 1.2);\r\n\r\n                let nameRatio = Math.ceil(10 * Camera.animated.v) / 10;\r\n                nameCache.setScale(nameRatio);\r\n\r\n                let name = nameCache.render();\r\n                let nameWidth = ~~(name.width / nameRatio);\r\n                let nameHeight = ~~(name.height / nameRatio);\r\n\r\n                ctx.drawImage(name, ~~cell.animated.x - ~~(nameWidth / 2), cellY - ~~(nameHeight / 2), nameWidth, nameHeight);\r\n\r\n                cellY += name.height / 2 / nameRatio + 4;\r\n\r\n                if (cell.sizeCache == null) {\r\n                    cell.sizeCache = new TextCache(cell.getNameSize() / 2, '#FFFFFF', true, '#000000');\r\n                }\r\n\r\n                // MASS CACHE\r\n                let sizeCache = cell.sizeCache;\r\n                sizeCache.setSize(cell.getNameSize() / 2);\r\n                sizeCache.setValue(~~(cell.animated.r * cell.animated.r / 100));\r\n                let sizeRatio = Math.ceil(10 * Camera.animated.v) / 10;\r\n                sizeCache.setScale(sizeRatio);\r\n\r\n                let size = sizeCache.render();\r\n                let sizeWidth = ~~(size.width / sizeRatio);\r\n                let sizeHeight = ~~(size.height / sizeRatio);\r\n\r\n                ctx.drawImage(size, ~~cell.animated.x - ~~(sizeWidth / 2), cellY - ~~(sizeHeight / 2), sizeWidth, sizeHeight);\r\n\r\n                // let size = cell.animated.r / 3;\r\n                // ctx.font = '600 ' + size + 'px Roboto Mono';\r\n                // ctx.fillStyle = '#fff';\r\n\r\n                // LAGGGGGG\r\n                // if (cell.name && cell.name.length > 0) {\r\n                //     ctx.fillText(cell.name, cell.animated.x, cell.animated.y);\r\n                // }\r\n\r\n                // LAGGGGGG\r\n                // let mass = ~~(cell.animated.r * cell.animated.r / 100);\r\n                // if (mass > 100) {\r\n                //     ctx.fillText(mass, cell.animated.x, cell.animated.y + size );\r\n                // }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Draw food\r\n    static food() {\r\n        let ctx = this.ctx;\r\n\r\n        ctx.beginPath();\r\n        World.food.forEach((food) => {\r\n            ctx.moveTo(food.position.x + food.position.r + 4, food.position.y);\r\n            ctx.arc(food.position.x, food.position.y, food.position.r + 4, 0, this.pi2, false);\r\n        });\r\n        ctx.closePath();\r\n        ctx.fillStyle = this.foodColor;\r\n        ctx.fill();\r\n    }\r\n\r\n    // Animation formula\r\n    static animate(previous, next, factor) {\r\n        return previous + ((next - previous) / factor);\r\n    }\r\n\r\n    static calcFps() {\r\n        let current = 1000 / ((this.fps.now = Date.now()) - this.fps.lastUpdate);\r\n        if (this.fps.now !== this.fps.lastUpdate) {\r\n            $('#fps').text(~~this.fps.value);\r\n            this.fps.value += (current - this.fps.value) / this.fps.filter;\r\n            this.fps.lastUpdate = this.fps.now;\r\n        }\r\n    }\r\n}\r\n","import Player from './Entities/Player.js';\r\n\r\n// Player hotkeys\r\nexport default class Hotkeys {\r\n    static create() {\r\n        this.pressed = false;\r\n\r\n        $(document).on('keydown', (e) => this.keydown(e));\r\n        $(document).on('keyup', (e) => this.keyup(e));\r\n    }\r\n\r\n    static keydown(e) {\r\n        if ($(e.target).is('input, textarea, select')) return;\r\n        if (this.pressed) return;\r\n        this.pressed = true;\r\n\r\n        switch (e.keyCode) {\r\n            case keycode('w'): this.eject(); break;\r\n            case keycode('a'): this.multiSplit(); break;\r\n            case keycode('s'): this.freeze(); break;\r\n            case keycode('d'): this.doubleSplit(); break;\r\n            case keycode('space'): this.split(); break;\r\n            case keycode('escape'): this.overlay(); break;\r\n        }\r\n    }\r\n\r\n    static keyup(e) {\r\n        this.pressed = false;\r\n    }\r\n\r\n    static overlay() {\r\n        $('#overlay').toggle();\r\n    }\r\n\r\n    static freeze() {\r\n        Player.isMoving = !Player.isMoving;\r\n    }\r\n\r\n    static split() {\r\n        Player.splitCell();\r\n    }\r\n\r\n    static doubleSplit() {\r\n        Player.splitCell();\r\n        setTimeout(() => Player.splitCell(), 100);\r\n    }\r\n\r\n    static multiSplit() {\r\n        Player.splitCell();\r\n        setTimeout(() => Player.splitCell(), 50);\r\n        setTimeout(() => Player.splitCell(), 100);\r\n        setTimeout(() => Player.splitCell(), 150);\r\n    }\r\n\r\n    static eject() {\r\n        if (this.pressed) {\r\n            Player.ejectMass();\r\n            setTimeout(() => this.eject(), 150);\r\n        }\r\n    }\r\n}\r\n","export default class Auth {\r\n    static init() {\r\n        $.ajaxSetup({ cache: true });\r\n        $.getScript('//connect.facebook.net/en_US/sdk.js', () => {\r\n            FB.init({appId: '102251620343810', version: 'v2.9'});\r\n            $('#facebook').removeAttr('disabled');\r\n        });\r\n\r\n        // is there a jwt token and user\r\n        if (localStorage.token && localStorage.token !== '') {\r\n            // is the token still valid\r\n            let decoded = jwtDecode(localStorage.token);\r\n            if (decoded.exp < +new Date() / 1000) {\r\n                // token is expired\r\n                $('.login').animateCss('zoomInUp');\r\n                $('.login').show();\r\n                $('.profile').hide();\r\n            } else if (decoded.user_name === '') {\r\n                $('.username').animateCss('zoomInUp');\r\n                $('.username').show();\r\n                $('.login').hide();\r\n                $('.profile').hide();\r\n            } else {\r\n                // user is logged in\r\n                let user = JSON.parse(localStorage.user);\r\n                $('.login').hide();\r\n                $('.profile').animateCss('zoomInUp');\r\n                $('.profile').show();\r\n                $('.user').text(`${user.username}#${user.user_id}`);\r\n                $('.email').text(`${user.email}`);\r\n            }\r\n        } else {\r\n            // user is logged out\r\n            $('.login').animateCss('zoomInUp');\r\n            $('.login').show();\r\n            $('.profile').hide();\r\n        }\r\n\r\n        $('#facebook').on('click', () => this.fbLogin());\r\n        $('#logout').on('click', () => this.logout());\r\n        $('#continue').on('click', () => this.username());\r\n    }\r\n\r\n    static logout() {\r\n        // clear localstorage\r\n        localStorage.token = '';\r\n        localStorage.user = '';\r\n        $('.profile').hide();\r\n        $('.login').animateCss('zoomInUp');\r\n        $('.login').show();\r\n    }\r\n\r\n    static username() {\r\n        if ($('#username').val().length > 3) {\r\n            $.post('http://localhost:4000/username', { token: localStorage.token, username: $('#username').val() }).done(data => {\r\n                localStorage.token = data.token;\r\n                localStorage.user = JSON.stringify(data.user);\r\n\r\n                $('.user').text(`${data.user.username}#${data.user.id}`);\r\n                $('.email').text(`${data.user.email}`);\r\n\r\n                $('.username').hide();\r\n                $('.profile').animateCss('zoomInUp');\r\n                $('.profile').show();\r\n            });\r\n        }\r\n    }\r\n\r\n    static fbLogin() {\r\n        FB.login(response => {\r\n            if (response.authResponse) {\r\n                let token = response.authResponse.accessToken;\r\n\r\n                // send the fb access token and login\r\n                $.post('http://localhost:4000/auth/facebook', { access_token: token }).done(data => {\r\n                    if (data.emailValid === false) {\r\n                        bootbox.alert('Cell Wars requires the Facebook email permission to be allowed. Please try again.');\r\n                        $('.modal-content').animateCss('zoomInDown');\r\n                        return;\r\n                    }\r\n\r\n                    localStorage.setItem('token', data.token);\r\n                    let decoded = jwtDecode(data.token);\r\n\r\n                    if (decoded.user_name === '') {\r\n                        $('.username').animateCss('zoomInUp');\r\n                        $('.username').show();\r\n                        $('.username').focus();\r\n                        $('.login').hide();\r\n                        $('.profile').hide();\r\n                    } else {\r\n                        localStorage.setItem('user', JSON.stringify(data.user));\r\n                        $('.user').text(`${data.user.username}#${data.user.user_id}`);\r\n                        $('.email').text(`${data.user.email}`);\r\n\r\n                        $('.login').hide();\r\n                        $('.profile').animateCss('zoomInUp');\r\n                        $('.profile').show();\r\n\r\n                        Logger.info('User logged in with Facebook');\r\n                    }\r\n                });\r\n            } else {\r\n                Logger.warn('User failed to authorize with Facebook');\r\n            }\r\n        }, {scope: 'email', auth_type: 'rerequest'});\r\n\r\n        return false;\r\n    }\r\n}\r\n","import Emitter from '../Emitter.js';\r\nimport Renderer from '../Renderer.js';\r\nimport Camera from './Camera.js';\r\nimport Player from './Player.js';\r\n\r\nexport default class Mouse {\r\n    // Create mouse object\r\n    static create() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n\r\n        // Mouse listener\r\n        $('#canvas').on('mousemove', (e) => this.coords(e));\r\n    }\r\n\r\n    // Runs in mouse loop\r\n    static run() {\r\n        let coords = this.relative();\r\n        Emitter.move(~~coords.x, ~~coords.y);\r\n    }\r\n\r\n    // Update mouse coords\r\n    static coords(e) {\r\n        this.x = e.clientX;\r\n        this.y = e.clientY;\r\n    }\r\n\r\n    // Calc relative mouse coords\r\n    static relative() {\r\n        let relative = {x: 0, y: 0};\r\n\r\n        if (Player.isMoving) {\r\n            relative.x = Camera.position.x + ((this.x - (Renderer.canvas.width / 2)) / Camera.position.v);\r\n            relative.y = Camera.position.y + ((this.y - (Renderer.canvas.height / 2)) / Camera.position.v);\r\n        } else {\r\n            relative.x = Camera.position.x;\r\n            relative.y = Camera.position.y;\r\n        }\r\n\r\n        return relative;\r\n    }\r\n}\r\n","import Renderer from './Renderer.js';\r\nimport Hotkeys from './Hotkeys.js';\r\nimport Auth from './Auth.js';\r\n\r\nimport Player from './Entities/Player.js';\r\nimport World from './Entities/World.js';\r\nimport Camera from './Entities/Camera.js';\r\nimport Mouse from './Entities/Mouse.js';\r\n\r\n// Creates game objects and executes the loops\r\nexport default class Engine {\r\n    // Starting point\r\n    static start() {\r\n        // Authenticate\r\n        Auth.init();\r\n\r\n        // Create objects\r\n        Player.create();\r\n        World.create();\r\n        Camera.create();\r\n        Renderer.create();\r\n        Mouse.create();\r\n        Hotkeys.create();\r\n\r\n        // Run loops\r\n        setInterval(() => this.mouseLoop(), 33);\r\n        this.gameLoop();\r\n\r\n        Logger.info('Engine started');\r\n    }\r\n\r\n    // Main game loop\r\n    static gameLoop() {\r\n        if (Player.isAlive) {\r\n            Renderer.run();\r\n            Camera.run();\r\n        }\r\n\r\n        requestAnimationFrame(() => this.gameLoop());\r\n    }\r\n\r\n    // Loop for sending mouse coords\r\n    static mouseLoop() {\r\n        if (!Player.isAlive) return;\r\n        Mouse.run();\r\n    }\r\n}\r\n","import TextCache from '../TextCache.js';\r\n\r\nexport default class Cell {\r\n    constructor(id, x, y, r, color, name, type) {\r\n        this.id = id;\r\n        this.position = {x: x, y: y, r: r};\r\n        this.animated = {x: x, y: y, r: r};\r\n        this.color = color;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.nameCache = null;\r\n        this.sizeCache = null;\r\n        this.setNameCache(name);\r\n    }\r\n\r\n    getNameSize() {\r\n        return Math.max(~~(0.3 * this.animated.r), 24);\r\n    }\r\n\r\n    setNameCache(name) {\r\n        if (this.nameCache === null) {\r\n            this.nameCache = new TextCache(this.getNameSize(), '#FFFFFF', true, '#000000');\r\n            this.nameCache.setValue(this.name);\r\n        } else {\r\n            this.nameCache.setSize(this.getNameSize());\r\n            this.nameCache.setValue(this.name);\r\n        }\r\n    }\r\n}\r\n","import Cell from './Cell.js';\r\nimport Player from './Player.js';\r\n\r\n// Container for our cell objects\r\nexport default class World {\r\n    // Creates a world object\r\n    static create() {\r\n        this.cells = [];\r\n        this.food = [];\r\n        this.border = {top: -7071, bottom: 7071, left: -7071, right: 7071};\r\n    }\r\n\r\n    // Add cell\r\n    static addCell(cell) {\r\n        let newCell = new Cell(cell.id, cell.x, cell.y, cell.r, cell.color, cell.name, cell.type);\r\n        if (cell.type !== 3) {\r\n            this.cells[cell.id] = newCell;\r\n        } else {\r\n            this.food[cell.id] = newCell;\r\n        }\r\n\r\n        if (cell.type === 1 && Player.cellIds.indexOf(cell.id) > -1) {\r\n            Player.cells[cell.id] = newCell;\r\n            Player.isSpawned = true;\r\n        }\r\n    }\r\n\r\n    // Remove cell\r\n    static removeCell(cell) {\r\n        if (cell.type !== 3) {\r\n            if (cell.id in this.cells) {\r\n                this.cells[cell.id] = null;\r\n                delete this.cells[cell.id];\r\n            }\r\n\r\n            if (cell.id in Player.cells) {\r\n                Player.cells[cell.id] = null;\r\n                delete Player.cells[cell.id];\r\n            }\r\n        } else {\r\n            this.food[cell.id] = null;\r\n            delete this.food[cell.id];\r\n        }\r\n    }\r\n\r\n    // Update cell\r\n    static updateCell(cell) {\r\n        if (cell.type !== 3) {\r\n            if (cell.id in this.cells) {\r\n                this.cells[cell.id].position.x = cell.x;\r\n                this.cells[cell.id].position.y = cell.y;\r\n\r\n                if (this.cells[cell.id].position.r !== cell.r) {\r\n                    this.cells[cell.id].position.r = cell.r;\r\n                    this.sortCells();\r\n                }\r\n            }\r\n        } else {\r\n            this.food[cell.id].position.x = cell.x;\r\n            this.food[cell.id].position.y = cell.y;\r\n        }\r\n    }\r\n\r\n    // Sort cells, virus, eject\r\n    static sortCells() {\r\n    }\r\n}\r\n","import Emitter from '../Emitter.js';\r\nimport World from './World.js';\r\n\r\n// Represents one player\r\nexport default class Player {\r\n    // Creates a player object\r\n    static create() {\r\n        this.cells = [];\r\n        this.cellIds = [];\r\n        this.score = 0;\r\n        this.isAlive = false;\r\n        this.isSpawned = false;\r\n        this.isMoving = true;\r\n\r\n        // Listen on connect and play\r\n        $('#spawn').on('click', () => {\r\n            if (this.isAlive) return;\r\n            this.spawn($('#nickname').val());\r\n        });\r\n    }\r\n\r\n    // Connect this player\r\n    static connect(server) {\r\n        Emitter.connect(server);\r\n    }\r\n\r\n    // Flush cell data\r\n    static flush() {\r\n        this.create();\r\n        World.create();\r\n    }\r\n\r\n    // Disconnect from server\r\n    static disconnect() {\r\n        this.isAlive = false;\r\n        Emitter.disconnect();\r\n    }\r\n\r\n    // Spawn this player\r\n    static spawn(nickname) {\r\n        this.isAlive = true;\r\n        $('#overlay').hide();\r\n        Emitter.spawn(nickname);\r\n    }\r\n\r\n    // Split action\r\n    static splitCell() {\r\n        Emitter.splitCell();\r\n    }\r\n\r\n    // Eject mass\r\n    static ejectMass() {\r\n        Emitter.ejectMass();\r\n    }\r\n\r\n    // Add a new cell id to array\r\n    static addCellId(cellId) {\r\n        this.cellIds.push(cellId);\r\n    }\r\n}\r\n","import Engine from './components/Engine.js';\r\nimport Player from './components/entities/Player.js';\r\n\r\n// window globals\r\nwindow.Buffer = buffer.Buffer;\r\n\r\n// css animations\r\n$.fn.extend({\r\n    animateCss: function(animationName) {\r\n        let animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n        this.addClass('animated ' + animationName).one(animationEnd, function() {\r\n            $(this).removeClass('animated ' + animationName);\r\n        });\r\n    }\r\n});\r\n\r\n// animate ui\r\n$('.play').animateCss('zoomInUp');\r\n\r\n// modals\r\n$('body').on('shown.bs.modal', '.modal', function() {\r\n    $(this).css({\r\n        'top': '50%',\r\n        'margin-top': function() {\r\n            return -($(this).height() / 2);\r\n        }\r\n    });\r\n});\r\n\r\n// bootbox\r\nbootbox.setDefaults({animate: false});\r\n\r\n// disable mouse\r\n// $('body').attr('oncontextmenu', 'return false;');\r\n\r\n$('#asia i').hide();\r\n$('#americas i').hide();\r\n\r\nPlayer.connect('140.113.92.237:50001');\r\n// Player.connect('188.226.135.116:50000');\r\n\r\n$('#europe').on('click', function() {\r\n    $('#asia i').hide();\r\n    $('#americas i').hide();\r\n    $('#europe i').show();\r\n    $('#europe i').animateCss('jello');\r\n\r\n    Player.flush();\r\n    Player.connect('140.113.92.237:50001');\r\n});\r\n\r\n$('#asia').on('click', function() {\r\n    $('#europe i').hide();\r\n    $('#americas i').hide();\r\n    $('#asia i').show();\r\n    $('#asia i').animateCss('jello');\r\n\r\n    Player.flush();\r\n    Player.connect('140.113.92.237:50000');\r\n});\r\n\r\n$('#americas').on('click', function() {\r\n    $('#europe i').hide();\r\n    $('#asia i').hide();\r\n    $('#americas i').show();\r\n    $('#americas i').animateCss('jello');\r\n\r\n    Player.connect('140.113.92.237:50002');\r\n});\r\n\r\n// button mouseover\r\n$('button').on('mouseover', function() {\r\n    let current = $(this).css('background-color');\r\n    $(this).css('background', color.rgb($(this).css('background-color')).darken(0.25));\r\n\r\n    $(this).on('mouseout', function() {\r\n        $(this).css('background', current);\r\n    });\r\n});\r\n\r\n// input focus\r\n$('input').on('focusin', function() {\r\n    let current = $(this).css('background-color');\r\n    $(this).css('background', color.rgb($(this).css('background-color')).darken(0.15));\r\n    $(this).on('focusout', function() {\r\n        $(this).css('background', current);\r\n    });\r\n});\r\n\r\nEngine.start();\r\n"]}